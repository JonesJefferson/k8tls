apiVersion: v1
kind: Namespace
metadata:
  name: k8tls
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: k8tls-serviceact
  namespace: k8tls
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: k8tls-cr
rules:
- apiGroups: [""]
  resources: ["services"]
  verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: k8tls-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: k8tls-cr
subjects:
- kind: ServiceAccount
  name: k8tls-serviceact
  namespace: k8tls
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8tls-cm
  namespace: k8tls
immutable: true
data:
  fips-140-3.json: |
    {
      "TLS_versions": [
        {
          "TLS_version": "TLSv1.0_1.1",
          "cipher_suites": [
            {
              "cipher_suite": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"
            },
            {
              "cipher_suite": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"
            }
          ]
        },
        {
          "TLS_version": "TLSv1.2",
          "cipher_suites": [
            {
              "cipher_suite": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA"
            },
            {
              "cipher_suite": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA"
            },
            {
              "cipher_suite": "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
            },
            {
              "cipher_suite": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_256_CCM"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_128_CCM"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8"
            },
            {
              "cipher_suite": "TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384"
            },
            {
              "cipher_suite": "TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384"
            },
            {
              "cipher_suite": "TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256"
            }
          ]
        },
        {
          "TLS_version": "TLSv1.3",
          "cipher_suites": [
            {
              "cipher_suite": "TLS_AES_256_GCM_SHA384"
            },
            {
              "cipher_suite": "TLS_AES_128_GCM_SHA256"
            },
            {
              "cipher_suite": "TLS_AES_128_CCM_SHA256"
            },
            {
              "cipher_suite": "TLS_AES_128_CCM_8_SHA256"
            }
          ]
        }
      ]
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: k8tls
  namespace: k8tls
spec:
  template:
    spec:
      serviceAccountName: k8tls-serviceact
      containers:
      - name: k8tls
        image:  kubearmor/k8tls:latest
        command: ["./k8s_tlsscan"]
        volumeMounts:
          - mountPath: /home/k8tls/config/
            name: config
            readOnly: true
      restartPolicy: Never
      volumes:
        - name: config
          configMap:
            name: k8tls-cm
  backoffLimit: 4
---
